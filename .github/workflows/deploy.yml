name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['main']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: true
      - name: Build
        run: pnpm build
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.vitepress/dist'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
  # algolia:
  #   needs: deploy
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Get the content of algolia.json as config
  #       id: algolia_config
  #       run: echo "config=$(cat algolia.json | jq -r tostring)" >> $GITHUB_OUTPUT
  #     - name: Push indices to Algolia
  #       uses: signcl/docsearch-scraper-action@master
  #       env:
  #         APPLICATION_ID: ${{ secrets.ALGOLIA_APPLICATION_ID }}
  #         API_KEY: ${{ secrets.ALGOLIA_API_KEY }}
  #         CONFIG: ${{ steps.algolia_config.outputs.config }}
